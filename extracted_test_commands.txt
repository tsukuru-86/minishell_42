# テストコマンド一覧 (main.valaから抽出)
# 各行が1つのテストコマンド（\nは実際の改行に変換済み）

|
| echo oi
| |
| | |
| $
>
>>
>>>
<
<<
echo hi <
cat    <| ls
echo hi | >
echo hi | > >>
echo hi | < |
echo hi |   | 
echo $EMPYT
echo $EMPYT    abc
echo $EMPYT abc
echo $EMPYT abc   $EMPTY
echo $EMPYT abc $EMPTY
$EMPTY echo $EMPYT abc
$
.. | .. | ..
./no_permission
 /bin/ls 
 /bin/ls -la 
 /bin/ls -l 
 /bin/ls -l -a 
 /bin/ls -l -a -t 
 printf "Hello World" 
 printf 'Hello World' 
 echo "Hello World" 
 echo 'Hello World' 
 echo "Hello World" | cat -e 
 printf 'Hello World' | cat -e 
 echo "Hello World" | cat -e | cat -e 
 echo "cat Makefile | cat > $USER"   
 echo 'cat Makefile | cat > $USER'   
 /bin/ls | /usr/bin/cat -e 
 echo ' ' 
 echo '    ' 
 echo '        ' 
 echo "        " 
 echo "    " 
 echo " " 
echo hello'world'
echo hello""world
echo ''
echo "$PWD"
echo '$PWD'
echo "> >> < * ? [ ] | ; [ ] || && ( }) & # $  <<"
echo '> >> < * ? [ ] | ; [ ] || && ( }) & # $  <<'
echo "exit_code ->$? user ->$USER home -> $HOME"
echo 'exit_code ->$? user ->$USER home -> $HOME'
echo "$"
echo '$'
echo $
echo $?
echo $?HELLO
 printf  $"  $USER  a"  
 
""
 cat -e < Makefile < ../.gitignor  
 < file_not_found 
 < file_not_found cat
 < file_not_found > /dev/stdout
 echo -n salut
 echo -nnnnnnnnnnnnnn1 salut
 echo -nnnnnnnnnnnnnn1 salut  nvobwriov wr gow v '$USER>eef>$USER' 
 echo -nnnnnnnnnnnnnnnnnnn1 salut  nvobwriov wr gow v '$USER>eef>$USER'  
 echo -nnnnnnnnnnnnnnnnnnn1 salut  nvobwriov wr gow v '>p' 
 cat -e < Makefile < ../.gitignore 
 ls -l | cat -e  | ls 
 printf 'Syntax Error!' | | ls 
 printf 'Syntax Error!' < | ls 
 printf 'Syntax Error!'  >> | ls 
 printf 'Syntax Error!' | > file_out 
 printf 'Syntax Error!' |> file_out 
 >x printf 'Syntax Error!' | 
 | >x printf 'Syntax Error!' 
 >x printf 'Syntax Error!' > 
 >x printf 'Syntax Error!' << 
 echo '>' test '<' 
 echo '>'
 echo '<'
 echo '<<'
 echo '>>'
 echo '>test<' 
 echo '>test' 
 echo 'test<' 
 echo "|" 
 echo '>test '< 
 echo ' test <' 
 echo ">" 
 echo ">test<" 
 echo ">test" 
 echo "test<" 
 printf 'Syntax Error!' | | ls 
 printf 'Syntax Error!' < | ls 
 printf 'Syntax Error!'  >> | ls 
 printf 'Syntax Error!' | > file_out 
 printf 'Syntax Error!' |> file_out 
 >x printf 'Syntax Error!' | 
 | >x printf 'Syntax Error!' 
 >x printf 'Syntax Error!' > 
 >x printf 'Syntax Error!' << 
 echo '>' test '<' 
 echo '>'
 echo '>test<' 
 echo '>test' 
 echo 'test<' 
 echo "|" 
 echo '>test '< 
 echo ' test <' 
 echo ">" 
 echo ">test<" 
 echo ">test" 
 echo "test<" 
 echo hello|cat -e
 echo hello      |cat -e
 echo hello|               cat -e
 echo         hello        |               cat -e
 ls|ls|ls|ls|ls|ls|cat    -e
 ls|ls|ls|ls|ls|ls|ls|ls |ls | ls    | ls | ls | cat    -e
 command_not_found | echo 'abc'
 command_not_found | cat
 cat Makefile | cat /dev/urandom | ls | wc -w 
 ls | ls |ls | ls| ls |ls| ls|ls | ls | ls | ls | ls
 cat Makefile | md5sum 
 cat Makefile | grep -o SRC | tr 'n' ' ' 
 cat /dev/urandom | head -c 15 | wc -c 
 cat /dev/urandom | strings | grep -o "[A-Z][0-9]" | tr -d 'n' | head -c 15 | wc -c 
 echo $ 
 echo $ USER 
 echo $USER 
 echo $USER$ 
 echo $USER $ 
 echo "$USER$" 
 echo "$USER $" 
 echo $JENEXISTEPAS 
 echo $ JENEXISTEPAS 
 echo $USER_$USER 
 echo $USER$USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER $USER 
 printf "$USERn" 
 printf $? 
 printf $?? 
 printf $??? $?? $? 
 printf "$USER$USER'' = ' $L ANG '" '' 
 printf "$USER$USER" 
 echo $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ | wc -l
 echo $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ | wc -l
 echo $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ | wc -l
 echo $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ | wc -l
 printf "$USER$USER'' = ' $L ANG '" 
 printf "=  PATH    "  't$USER  ' "" 
 prin"tf "$USER 
 pri"tf" $USER 
 pri"tf $USER" 
 "printf" $USER 
 "printf" ""$USER"bj'r'" 
 "pr'int'f" ""$'USER'"bj'r'" 
 printf $'hello' 
 printf $"hello" 
 ''''''"/bin/ls"'''''' 
 /b'i"n/ls' -l  
 /b''i"n/''ls -"na'"th'an
 /b'i''''''''n/"l's 
 /b'in/l's -l'a'
 '/'b"in/l"s 
 echo '$?' 
 echo ''$USER'' 
 echo '''$USER''' 
 echo 
 echo '' b
 echo '' ''x
 echo '' "''" ''X
 echo$USER 
 echo -n $USER -n hello supra $USER
 echo -n test
 echo test -n 
 echo -nnnnnnnnnnnnnn -nns -n test 
 echo -nnnnnnnnnnnnnn -nnn -n test 
 echo str1  "" str3"  not finished yet ........ done." 
 echo  Ichi Ni San Yon Go | cat -e
 < Makefile cat | md5sum 
 < file_not_found cat | wc -c 
 < Makefile cmd_not_found | wc -c 
 < Makefile | printf 'You see me?' 
 < Makefile wc -w  < tester.vala 
 wc -w < tester.vala < Makefile 
 ls | wc -w < tester.vala < Makefile 
 < Makefile < tester.vala wc -c 
 ls | < Makefile < tester.vala wc -c 
 printf 'Hello World' >trash/$WHOAMI.a.test ", "cat trash/$WHOAMI.a.test -e
 >trash/$WHOAMI.b.test printf 'Hello World' >trash/$WHOAMI.c.test ", "cat trash/$WHOAMI.b.test -e", "echo A", "cat trash/$WHOAMI.c.test -e
$PWD
$EMPTY
$EMPTY echo hi
./test_files/invalid_permission
./missing.out
missing.out
"aaa"
'aaa'
test_files
./test_files
/test_files
minishell.h
$
$?
README.md
edsfdsf" , "echo error: $?
clear | pwd
clear | pwd | cat -e
clear | pwd . | cat -e
pwd
pwd ..
pwd .
pwd . | cat -e
pwd | cat -e
printf a | pwd | cat -e
unset LD_PRELOAD", "unset WHOAMI", "unset PWD", "unset LANG", "unset OLDPWD", "unset ARGS", "unset MAKEFLAGS", "unset MFLAGS", "env | grep -v _ | grep -v SHLVL | grep -v SHELL | sort
 env | grep USER | md5sum 
 env | grep USER 
unset 6_a
unset ndacunh
unset 0oui
unset PWD HERE", "echo $PWD
export ABC", "env | grep ABC -o", "printf hi", "env | grep ABC
export NDACUNH=42", "unset NDACUNH | printf hey", "printf : $NDACUNH
export GHOST=123 | env | grep GHOST
export hello
""export HELLO=123""", "printf : $HELLO
export A-
export HELLO=123 A
export HELLO="123 A-"
export hello world
export HELLO-=123
export =
export 123
""export SLS='/bin/ls'""", "printf here:", "$SLS
export UNO=1 DOS-2 TRES=3 | env | grep TRES
export abcd=abcd", "export abcd+=ndacunh", "env | grep abcd
export ABCD=abcd", "export ABCD +=ndacunh", "env | grep ABCD
export ABCD=abcd", "export ABCD += ndacunh", "env | grep ABCD
export ABCD=abcd", "export ABCD+= ndacunh", "env | grep ABCD
export ABCD =abcd", "env | grep ABCD
export ABCD= abcd", "env | grep ABCD
export ABCD=Hello", "export ABCD =abcd", "env | grep ABCD
export ABCD=Hello", "export ABCD= abcd", "env | grep ABCD
unset HELLO=
unset
unset HELLO1 HELLO2
unset HOME", "echo $HOME
unset PATH", "/bin/ls
unset PATH", "ls
unset PATH", @"export PATH='$PWD'", "ls
unset PATH", @"export PATH='$PWD'", "/bin/ls
unset PATH", @"export PATH='$PWD'", @"$PWD/ls
export A='suprapack'", "echo a $A", "unset A", "echo a $A
export HELLO=abc", "unset HELLO
export HELLO=abc", "unset HELL", "unset HELLOO", "printf : $HELLO
exit 123
exit 298
exit 256
exit +100
exit "+100"
exit +"100"
exit -100
exit "-100"
exit -"100"
exit hello
exit 42 world
exit 9223372036854775807
exit 9223372036854775808
exit -9223372036854775807
exit -9223372036854775808
exit -9223372036854775809
<< end cat -e nsimplentestnend
<< AH cat -e nsimplentestnendnAH
<< AH cat -e nsimplennnnnnnendnAH
<< AH cat -e | grep -o 'simple' nsimplenendnAH
<< EOF cat -e n$USERnEOF
<< EOF cat -e nnda-cunhnEOF
cat << here -enhellonhere
cat << here -enhellonhere
*
*/*
*/*
echo *
echo D*
echo *Z
echo *t hola
echo *t
echo $*
echo hola*hola *
echo $hola*
echo $HOME*
cd *
cd *
cd *
echo hola || cat
pwd || ls
echo hola || echo bonjour
echo hola && echo bonjour
echo bonjour || echo hola
echo bonjour && echo hola
echo -n bonjour && echo -n hola
pwd && ls && echo hola
pwd || ls && echo hola
pwd && ls || echo hola
pwd || ls || echo hola
ls || export ""
export "" || ls
ls && export ""
export "" && ls
export "" && unset ""
ls || ;
; || ls
ls && ;
; && ls
ls || <
ls && <
cat | echo || ls
cat | echo && ls
ls || cat | echo
ls && cat | echo
(ls)
( ( ls ) )
( ( ) ls )
ls && (ls)
(ls && pwd)
( ( ls&&pwd ) )
( ( ls ) &&pwd )
(ls && ( ( pwd ) ) )
(ls && pwd) > hola $> cat hola
> hola ls && pwd
> hola (ls && pwd)
(> pwd) $> ls
(< pwd) $> ls
(< pwd)
( ( ( ( ( pwd) ) ) ) )
() pwd
> pwd (ls)
(ls||pwd)&&(ls||pwd)
(lss||pwd)&&(lss||pwd)
(lss&&pwd)&&(lss&&pwd)
(ls && pwd | wc) > hola $> cat hola
(ls && pwd | wc) > hola $> (ls && pwd | wc) > hola $> cat hola
(ls && pwd | wc) >> hola $> echo hey&&(ls && pwd | wc) > hola $> cat hola
(pwd | wc) < hola
(ls && pwd | wc) < hola
(ls -z || pwd | wc) < hola
echo hey > hola $> (pwd | wc) < hola
echo hey > hola $> (ls && pwd | wc) < hola
echo hey > hola $> (ls -z || pwd | wc) < hola
(ls -z || pwd && ls)
ls || (cat Makefile|grep srcs) && (pwd|wc)
ls -z && (ls) && (pwd)
(ls > Docs/hey && pwd) > hola $> cat hola $> cat Docs/hey
ls > Docs/hey && pwd > hola $> cat hola $> cat Docs/hey
cd ../.. && pwd && pwd
(cd ../.. && pwd) && pwd
ls -z || cd ../../..&&pwd $> pwd
ls -z || (cd ../../..&&pwd) $> pwd
ls *
ls *.*
ls *.hola
cat M*le
cat M*ee
cat Make*file
